/*
* Copyright (c) 2004, 2005 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resources for Video Telephone application.
*
*/



//  RESOURCE IDENTIFIER
NAME        VTUI

//  INCLUDES
#include    <eikon.rh>
#include    <avkon.rsg>
#include    <avkon.rh>
#include    <avkon.loc>
#include    <data_caging_paths_strings.hrh>
#include    <avkon.mbg>
#include    <videotelui.mbg>
#include    <aknsconstants.hrh>

#include    <videotelui.loc>
#include    "videotelui.hrh"


#include    <appinfo.rh>

//  CONSTANTS
#define KVtStartSoundFile   "z:\\system\\sounds\\digital\\VtStartRecord.wav"
#define KVtStopSoundFile    "z:\\system\\sounds\\digital\\VtStopRecord.wav"
//  RESOURCE DEFINITIONS

// -----------------------------------------------------------------------------
//
// Resource file signature.
//
// -----------------------------------------------------------------------------
//
RESOURCE RSS_SIGNATURE
    {
    }

// -----------------------------------------------------------------------------
//
// Default name of the document. No such document, so empty.
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF
    {
    buf = "";
    }

// -----------------------------------------------------------------------------
//
// Application information.
//
// -----------------------------------------------------------------------------
//
RESOURCE EIK_APP_INFO
    {
    status_pane = r_videotelui_status_pane;
    menubar = r_videotelui_menubar;
    cba = r_videotelui_softkeys_end_call;
    custom_app_info_extension = r_videotelui_info_extension;
    }
// -----------------------------------------------------------------------------
//
// Info extension
// r_videotelui_info_extension
//
// -----------------------------------------------------------------------------
//
RESOURCE EIK_APP_INFO_EXT r_videotelui_info_extension
    {
    popup_toolbar = r_videotelui_fixed _toolbar;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_localisable_app_info
// Captions for this application.
//
// -----------------------------------------------------------------------------
//
RESOURCE LOCALISABLE_APP_INFO r_videotelui_localisable_app_info
    {
    short_caption = qtn_apps_videophone_grid;
    caption_and_icon =
        CAPTION_AND_ICON_INFO
            {
            caption = qtn_apps_videophone_grid;
#ifdef __SCALABLE_ICONS
            number_of_icons = 1;


            icon_file =
                "Z:"APP_BITMAP_DIR"\\videotelui_aif.mif";
#else
            number_of_icons = 1;
            icon_file =
                "Z:"APP_BITMAP_DIR"\\videotelui_aif.mbm";


#endif // __SCALABLE_ICONS
            };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_status_pane
// Status pane for the application.
//
// -----------------------------------------------------------------------------
//
RESOURCE STATUS_PANE_APP_MODEL r_videotelui_status_pane
    {
    layout = R_AVKON_STATUS_PANE_LAYOUT_USUAL;
    panes =
        {
        SPANE_PANE
            {
            id = EEikStatusPaneUidTitle;
            type = EAknCtTitlePane;
            resource = r_videotelui_title_pane;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_menubar
// Menubar for the application.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_videotelui_menubar
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_videotelui_menu;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_ok_menubar
// Menubar for the application.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_BAR r_videotelui_ok_menubar
    {
    titles =
        {
        MENU_TITLE
            {
            menu_pane = r_videotelui_ok_menu;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_menu
// Options menu for the application. This menu is opened when Options softkey
// is pressed.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_videotelui_menu
    {
    items =
        {
        MENU_ITEM // Enable
            {
            command = EVtUiCmdEnableMain;
            txt = qtn_incal_enable_main_option;
            cascade = r_videotelui_enable_menu;
            },
        MENU_ITEM // Disable
            {
            command = EVtUiCmdDisableMain;
            txt = qtn_incal_disable_main_option;
            cascade = r_videotelui_disable_menu;
            },
        MENU_ITEM // Use primary camera
            {
            command = EVtUiCmdUsePrimaryCamera;
            txt = qtn_incal_camera_1_option;
            },
        MENU_ITEM // Use secondary camera
            {
            command = EVtUiCmdUseSecondaryCamera;
            txt = qtn_incal_camera_2_option;
            },
        MENU_ITEM // Swap images places
            {
            command = EVtUiCmdSwapImagesPlaces;
            txt = qtn_incal_swap_vt_images;
            },
        MENU_ITEM // Snapshot
            {
            command = EVtUiCmdSnapshot;
            txt = qtn_incal_snapshot_option;
            },
        MENU_ITEM // Send DTMF
            {
            command = EVtUiCmdSendDTMF;
            txt = qtn_incal_send_dtmf_tone_option;
            },
        MENU_ITEM // Share file
            {
            command = EVtUiCmdShareObjectImage;
            txt = qtn_incal_video_call_share_file;
            },
        MENU_ITEM // Handset (deactivate loudspeaker)
            {
            command = EVtUiCmdDeactivateLoudspeaker;
            txt = qtn_incal_deact_ihf_option;
            },
        MENU_ITEM // Loudspeaker
            {
            command = EVtUiCmdActivateLoudspeaker;
            txt = qtn_incal_act_ihf_option;
            },
        MENU_ITEM // BT handsfree
            {
            command = EVtUiCmdActivateBT;
            txt = qtn_incal_bt_handsfree_option;
            },
        MENU_ITEM // Handset (deactivate BT)
            {
            command = EVtUiCmdDeactivateBT;
            txt = qtn_incal_handset_option;
            },
        MENU_ITEM // Video to voice
            {
            command = EVtUiCmdCreateVoice;
            txt = qtn_incal_video_to_voice;
            },
        MENU_ITEM
            {
            command = EVtUiCmdAdjustVideo;
            txt = qtn_incal_video_adjust_option;
            cascade = r_videotelui_video_adjust_menu;
            },
        MENU_ITEM // Zoom
            {
            command = EVtUiCmdZoom;
            txt = qtn_incal_zoom_own_video;
            },
        MENU_ITEM // End active call
            {
            command = EVtUiCmdEndActiveCall;
            txt = qtn_incal_drop_option;
            },
        MENU_ITEM // Go to Idle
            {
            command = EVtUiCmdGoToIdle;
#ifdef RD_BOOT_CUSTOMIZABLE_AI
            txt = qtn_incal_goto_idle;
#else
            txt = qtn_incal_goto_active_idle;
#endif // RD_BOOT_CUSTOMIZABLE_AI
            },
        MENU_ITEM // Help
            {
            command = EAknCmdHelp;
            txt = qtn_options_help;
            },
        MENU_ITEM // Exit
            {
            command = EAknCmdExit;
            txt = qtn_options_exit;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_ok_menu
// Options menu for the application. This menu is opened when selection key
// is pressed.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_videotelui_ok_menu
    {
    items =
        {
        MENU_ITEM // Disable
            {
            command = EVtUiCmdDisableMain;
            txt = qtn_incal_disable_main_option;
            cascade = r_videotelui_disable_menu;
            },
        MENU_ITEM // Snapshot
            {
            command = EVtUiCmdSnapshot;
            txt = qtn_incal_snapshot_option;
            },
        MENU_ITEM // End active call
            {
            command = EVtUiCmdEndActiveCall;
            txt = qtn_incal_drop_option;
            },
        MENU_ITEM // Use primary camera
            {
            command = EVtUiCmdUsePrimaryCamera;
            txt = qtn_incal_camera_1_option;
            },
        MENU_ITEM // Use secondary camera
            {
            command = EVtUiCmdUseSecondaryCamera;
            txt = qtn_incal_camera_2_option;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_enable_menu
// "Enable" submenu for the application.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_videotelui_enable_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EVtUiCmdEnableVideo;
            txt = qtn_incal_change_video_option;
            },
        MENU_ITEM
            {
            command = EVtUiCmdEnableAudio;
            txt = qtn_incal_change_audio_option;
            },
        MENU_ITEM
            {
            command = EVtUiCmdEnableBoth;
            txt = qtn_incal_change_both_option;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_disable_menu
// "Disable" submenu for the application.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_videotelui_disable_menu
    {
    items =
        {
        MENU_ITEM
            {
            command = EVtUiCmdDisableVideo;
            txt = qtn_incal_change_video_option;
            },
        MENU_ITEM
            {
            command = EVtUiCmdDisableAudio;
            txt = qtn_incal_change_audio_option;
            },
        MENU_ITEM
            {
            command = EVtUiCmdDisableBoth;
            txt = qtn_incal_change_both_option;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_video_adjust_menu
// "Adjust video" submenu for the application.
//
// -----------------------------------------------------------------------------
//
RESOURCE MENU_PANE r_videotelui_video_adjust_menu
	{
    items =
        {
        MENU_ITEM
            {
            command = EVtUiCmdAdjustVideoVideoQuality;
            txt = qtn_incal_video_prefer_option;
            },
        MENU_ITEM
            {
            command = EVtUiCmdAdjustVideoWhiteBalance;
            txt = qtn_incal_video_white_balance_option;
            },
        MENU_ITEM
            {
            command = EVtUiCmdAdjustVideoBrightness;
            txt = qtn_incal_video_brightness_option;
            },
        MENU_ITEM
            {
            command = EVtUiCmdAdjustVideoContrast;
            txt = qtn_incal_video_contrast_option;
            },
        MENU_ITEM
            {
            command = EVtUiCmdAdjustVideoColourTone;
            txt = qtn_incal_video_colour_tone_option;
            }
        };
	}

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_enable_video
// Options & Enable video softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_enable_video
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdEnableVideo;
            txt = qtn_incal_softk_enable_video;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyContextOptions;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_enable_audio
// Options & Enable audio softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_enable_audio
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdEnableAudio;
            txt = qtn_incal_softk_enable_audio;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyContextOptions;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_handset_b
// Options & Handset both softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_handset_b
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdDeactivateLoudspeaker;
            txt = qtn_incal_softk_handset;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyContextOptions;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_loudspeaker
// Options & Handset both softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_loudspeaker
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdActivateLoudspeaker;
            txt = qtn_incal_softk_laudspek;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyContextOptions;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_bt_handsfree
// Options & Handset both softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_bt_handsfree
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdActivateBT;
            txt = qtn_incal_softk_bt_handsfree;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyContextOptions;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_end_call
// Options & End call softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_end_call
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdEndActiveCall;
            txt = qtn_incal_softk_end_this;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyContextOptions;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_capture_video
// Capture & Cancel video softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_capture_video
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EVtUiCmdCapture;
            txt = qtn_softk_capture;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdCancelCapture;
            txt = text_softkey_cancel;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdCapture;
            txt = qtn_softk_capture;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_share_object_image
// Options & Stop image object sharing
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_share_object_image
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdStopSharingObjectImage;
            txt = qtn_softk_disable_share;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyContextOptions;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_blank_dlg
// Blank dialog.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_videotelui_blank_dlg
    {
    flags = ( EEikDialogFlagNoDrag |
              EEikDialogFlagNoTitleBar |
              EEikDialogFlagFillAppClientRect |
              EEikDialogFlagCbaButtons |
              EEikDialogFlagWait );

    buttons = r_videotelui_softkeys_empty;

    items =
        {
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_blank_nowait_dlg
// Blank dialog, no wait flag.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_videotelui_blank_nowait_dlg
    {
    flags = ( EEikDialogFlagNoDrag |
              EEikDialogFlagNoTitleBar |
              EEikDialogFlagFillAppClientRect |
              EEikDialogFlagCbaButtons );

    buttons = r_videotelui_softkeys_empty;

    items =
        {
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_empty
//
// Empty softkeys. Note that AVKON empty softkey
// resource can not be used, because flags are needed.
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_empty
    {
    flags = EAknCBAFlagRespondWhenInvisible;

    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyEmpty;
            txt = text_softkey_empty;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyEmpty;
            txt = text_softkey_empty;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyEmpty;
            txt = text_softkey_empty;
            }
        };
    }


// -----------------------------------------------------------------------------
//
// r_videotelui_qtn_incal_muted_pane
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_incal_muted_pane
    {
    buf = qtn_incal_muted_pane;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_allow_video_query
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_videotelui_allow_video_query
    {
    flags =
        EEikDialogFlagNoDrag |
        EEikDialogFlagNoTitleBar |
        EEikDialogFlagCbaButtons |
        EEikDialogFlagNotifyEsc ;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                label = "";
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_switch_to_voice_query
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_videotelui_create_voice_query
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                };
            }
        };
    }

// ---------------------------------------------------------
//
// r_videotelui_qtn_send_video_image
//
// ---------------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_send_video_image
    {
    buf = qtn_incal_send_video_image;
    }

// ---------------------------------------------------------
//
// r_videotelui_qtn_call_number_video
//
// ---------------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_call_number_video
    {
    buf = qtn_call_number_video;
    }

// -----------------------------------------------------------------------------
//
//    r_videotelui_title_pane
//    It defines default title pane.
//
// -----------------------------------------------------------------------------
//
RESOURCE TITLE_PANE r_videotelui_title_pane
    {
    txt = " ";
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_qtn_incal_waiting_image
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_incal_waiting_image
    {
    buf = qtn_incal_waiting_image;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_emergency_note
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_videotelui_emergency_note
    {
    flags = EEikDialogFlagNoDrag |
            EEikDialogFlagNoTitleBar |
            EEikDialogFlagCbaButtons;

    buttons = R_AVKON_SOFTKEYS_CANCEL;

    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EGeneralLayout;
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//
//    r_videotelui_information_note
//    It defines note template for information notes. Text
//    must be replaced to correct in code. Note does not have wait
//    flag.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_videotelui_information_note
    {
    flags =
        EEikDialogFlagNoDrag |
        EEikDialogFlagNoTitleBar |
        EEikDialogFlagCbaButtons;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control =
                AVKON_NOTE
                    {
                    layout = EGeneralLayout;
                    singular_label = " ";
                    plural_label = "";
                    animation = R_QGN_NOTE_INFO_ANIM;
                    };
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_qtn_incal_close_camcorder
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_incal_close_camcorder
    {
    buf = qtn_incal_close_camcorder;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_bthf_connect_wait_note
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_videotelui_bthf_connect_wait_note
    {
    flags = EEikDialogFlagNoDrag |
            EEikDialogFlagNoTitleBar |
            EEikDialogFlagCbaButtons |
            EEikDialogFlagWait;

    buttons = R_AVKON_SOFTKEYS_EMPTY;

    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EWaitLayout;
                singular_label = qtn_wait_connecting_to_bt;
                plural_label = "";
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_qtn_bt_device_not_avail
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_bt_device_not_avail
    {
    buf = qtn_bt_device_not_avail;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_text_not_allowed
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_videotelui_text_not_allowed
    {
    buf = text_not_allowed;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_text_call_not_allowed
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_videotelui_text_call_not_allowed
    {
    buf = text_call_not_allowed;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_qtn_err_cam_swap
//
// -----------------------------------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_err_cam_swap
    {
    buf = qtn_err_cam_swap;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_qtn_query_create_voice_call
//
//
RESOURCE TBUF r_videotelui_qtn_query_create_voice_call
    {
    buf = qtn_query_create_voice_call;
    }
//----------------------------------------------------
//
//    r_videotelui_qtn_err_unable_to_open_image
//
//----------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_err_unable_to_open_image
    {
    buf = qtn_tel_info_unable_open_image;
    }

//----------------------------------------------------
//
//    r_videotelui_qtn_incal_note_decoding_failed
//
//----------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_incal_note_decoding_failed
    {
    buf = qtn_incal_note_decoding_failed;
    }

//----------------------------------------------------
//
//    r_videotelui_qtn_err_drm_not_allowed
//
//----------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_err_drm_not_allowed
    {
    buf = qtn_drm_not_allowed;
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_tooltip_zoom
//
//
RESOURCE TBUF r_videotelui_tooltip_zoom
    {
    buf = qtn_vt_tooltip_zoom;
    }

//----------------------------------------------------
//
//    r_image_load_wait_note
//    Image initialization wait note.
//
//----------------------------------------------------
//
RESOURCE DIALOG r_progress_decoding_image_wait_note
    {
    flags = EAknWaitNoteFlags;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items=
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EGeneralNote;
            control = AVKON_NOTE
                {
                layout = EWaitLayout;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                singular_label = qtn_vt_progress_decoding_image;
                };
            }
        };
    }

//----------------------------------------------------
//
//    r_videotelui_context_options_cba_button
//    Cba button resource for number entry.
//
//----------------------------------------------------
//
RESOURCE CBA_BUTTON r_videotelui_context_options_cba_button
    {
    id=EAknSoftkeyContextOptions;
    txt=text_softkey_empty;
    }

//----------------------------------------------------
//
//    r_videotelui_select_cba_button
//    Empty cba button resource for toolbar.
//
//----------------------------------------------------
//
RESOURCE CBA_BUTTON r_videotelui_select_cba_button
    {
    id = EAknSoftkeySelect;
    txt= text_softkey_select;
    }

//----------------------------------------------------
//
//    r_videotelui_empty_cba_button
//    Empty cba button resource for number entry.
//
//----------------------------------------------------
//
RESOURCE CBA_BUTTON r_videotelui_empty_cba_button
    {
    id = EAknSoftkeyEmpty;
    txt= text_softkey_empty;
    }

//----------------------------------------------------
//
//    r_videotelui_floating_toolbar
//    Empty resource for floating toolbar.
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_videotelui_floating_toolbar
    {
    flags = KAknToolbarWithoutCba | KAknToolbarAlwaysFocusing |
            KAknToolbarFlexiblePosition;
    items =
        {
        };
    }

//----------------------------------------------------
//
//    r_videotelui_fixed_toolbar
//    Empty resource for fixed toolbar.
//
//----------------------------------------------------
//
RESOURCE AVKON_TOOLBAR r_videotelui_fixed_toolbar
    {
    flags = KAknToolbarFixed;
    items =
        {
        };
    }

//----------------------------------------------------
//
//    r_videotelui_video_record_start_sound_path
//    Path to a sound file to play when starting video recording
//
//----------------------------------------------------
//
RESOURCE TBUF r_videotelui_video_record_start_sound_path
    {
    buf = KVtStartSoundFile;
    }


//----------------------------------------------------
//
//    r_videotelui_video_record_stop_sound_path
//    Path to a sound file to play when stopping video recording
//
//----------------------------------------------------
//
RESOURCE TBUF r_videotelui_video_record_stop_sound_path
    {
    buf = KVtStopSoundFile;
    }

//----------------------------------------------------
//
//   r_disable_video_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_disable_video_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbVideoDisable;
    //skinid = KAknsIIDQgnIndiTbVideoDisable;
    }

//----------------------------------------------------
//
//   r_enable_video_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_enable_video_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbVideo;
    //skinid = KAknsIIDQgnIndiTbVideo;
    }

//----------------------------------------------------
//
//   r_mute_microphone_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_mute_microphone_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbMicrophoneMute;
    //skinid = KAknsIIDQgnIndiTbMicrophoneMute;
    }

//----------------------------------------------------
//
//   r_unmute_microphone_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_unmute_microphone_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbMicrophoneUnmute;
    //skinid = KAknsIIDQgnIndiTbMicrophoneUnmute;
    }

//----------------------------------------------------
//
//   r_primary_cam_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_primary_cam_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbCameraMain ;
    //skinid = KAknsIIDQgnIndiTbCameraMain;
    }

//----------------------------------------------------
//
//   r_secondary_cam_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_secondary_cam_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbCameraSecondary;
    //skinid = KAknsIIDQgnIndiTbCameraSecondary;
    }

//----------------------------------------------------
//
//   r_zoom_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_zoom_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbZoom;
    //skinid = KAknsIIDQgnIndiTbZoom;
    }

//----------------------------------------------------
//
//   r_share_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_swap_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbSwapImages;
    //skinid = KAknsIIDQgnIndiTbSwapImages;
    }

//----------------------------------------------------
//
//   r_share_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_share_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbGallery;
    //skinid = KAknsIIDQgnIndiTbGallery;
    }

//----------------------------------------------------
//
//   r_handset_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION  r_handset_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbHandset;
    //skinid = KAknsIIDQgnIndiTbHandset;
    }

//----------------------------------------------------
//
//   r_ihf_on_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_ihf_on_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbIhfOn;
    //skinid = KAknsIIDQgnIndiTbIhfOn;
    }

//----------------------------------------------------
//
//   r_bt_hf_button_state_extension
//
//----------------------------------------------------
//
RESOURCE AVKON_BUTTON_STATE_EXTENSION r_bt_hf_button_state_extension
    {
    bmbSkinIdMajor = EAknsMajorGeneric;
    bmbSkinIdMinor = EAknsMinorGenericQgnIndiTbBthf;
    //skinid = KAknsIIDQgnIndiTbBthf;
    }

// -----------------------------------------------------------------------------
//
// r_avkonbutton_toggle_video_button
// This button disables and enables video.
// This button has two states.
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkonbutton_toggle_video_button
    {
    flags  = 0;
    states =
        {
        AVKON_BUTTON_STATE  // disable video button (0)
            {
            bmpfile =  "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_video_disable;
            bmpmask = EMbmVideoteluiQgn_indi_tb_video_disable_mask;
            helptxt = qtn_vt_tooltip_disable_video;
            extension = r_disable_video_button_state_extension;
            },
        AVKON_BUTTON_STATE // disable video button (dummy state) (1)
            {
            bmpfile =  "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_video_disable;
            bmpmask = EMbmVideoteluiQgn_indi_tb_video_disable_mask;
            extension = r_disable_video_button_state_extension;
 			  	  },
        AVKON_BUTTON_STATE  // enable video button (2)
            {
            bmpfile =  "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_video;
            bmpmask = EMbmVideoteluiQgn_indi_tb_video_mask;
            helptxt = qtn_vt_tooltip_enable_video;
            extension = r_enable_video_button_state_extension;
            },
        AVKON_BUTTON_STATE // enable video button (dummy state) (3)
            {
            bmpfile =  "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_video;
            bmpmask = EMbmVideoteluiQgn_indi_tb_video_mask;
            extension = r_enable_video_button_state_extension;
 			  	  }
        };
    }
// -----------------------------------------------------------------------------
//
// r_avkonbutton_toggle_microphone_button
// This button mutes and unmutes microphone.
// This button has two states.
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkonbutton_toggle_microphone_button
    {
    flags  = 0;
    states =
        {
        AVKON_BUTTON_STATE  // mute mic button (0)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_microphone_mute;
            bmpmask = EMbmVideoteluiQgn_indi_tb_microphone_mute_mask;
            helptxt = qtn_vt_tooltip_mute_microphone;
            extension = r_mute_microphone_button_state_extension;
            },
        AVKON_BUTTON_STATE  // mute mic button (dummy state) (1)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_microphone_mute;
            bmpmask = EMbmVideoteluiQgn_indi_tb_microphone_mute_mask;
            extension = r_mute_microphone_button_state_extension;
            },
        AVKON_BUTTON_STATE  // unmute mic button (2)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_microphone_unmute;
            bmpmask = EMbmVideoteluiQgn_indi_tb_microphone_unmute_mask;
            helptxt = qtn_vt_tooltip_unmute_microphone;
            extension = r_unmute_microphone_button_state_extension;
            },
        AVKON_BUTTON_STATE  // unmute mic button  (dummy state) (3)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_microphone_unmute;
            bmpmask = EMbmVideoteluiQgn_indi_tb_microphone_unmute_mask;
            extension = r_unmute_microphone_button_state_extension;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_avkonbutton_toggle_camera_button
// This button changes used camera between primary and secondary.
// This button has two states.
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkonbutton_toggle_camera_button
    {
    flags  = 0;
    states =
        {
        AVKON_BUTTON_STATE  // primary camera button (0)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_camera_main;
            bmpmask = EMbmVideoteluiQgn_indi_tb_camera_main_mask;
            helptxt = qtn_vt_tooltip_primary_cam;
            extension = r_primary_cam_button_state_extension;
            },
        AVKON_BUTTON_STATE  // primary camera button (dummy state) (1)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_camera_main;
            bmpmask = EMbmVideoteluiQgn_indi_tb_camera_main_mask;
            extension = r_primary_cam_button_state_extension;
            },
        AVKON_BUTTON_STATE  // secondary camera button (2)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_camera_secondary;
            bmpmask = EMbmVideoteluiQgn_indi_tb_camera_secondary_mask;
            helptxt = qtn_vt_tooltip_secondary_cam;
             extension = r_secondary_cam_button_state_extension;
            },
        AVKON_BUTTON_STATE  // secondary camera button (dummy state) (3)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_camera_secondary;
            bmpmask = EMbmVideoteluiQgn_indi_tb_camera_secondary_mask;
            extension = r_secondary_cam_button_state_extension;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_avkonbutton_swap_images_button
// This button swaps images
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkonbutton_swap_images_button
    {
    flags  = 0;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_swap_images;
            bmpmask = EMbmVideoteluiQgn_indi_tb_swap_images_mask;
            helptxt = qtn_vt_tooltip_swap_images;
            extension = r_swap_button_state_extension;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_avkonbutton_activate_zoom_mode_button
// This button activates zoom mode.
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkonbutton_activate_zoom_mode_button
    {
    flags  = 0;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_zoom;
            bmpmask = EMbmVideoteluiQgn_indi_tb_zoom_mask;
            helptxt =  qtn_vt_tooltip_zoom;
            extension = r_zoom_button_state_extension;
            },
         AVKON_BUTTON_STATE
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid  = EMbmVideoteluiQgn_indi_tb_zoom;
            bmpmask = EMbmVideoteluiQgn_indi_tb_zoom_mask;
            flags = KAknButtonStateHasLatchedFrame;
            helptxt = qtn_vt_tooltip_zoom;
            extension = r_zoom_button_state_extension;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_avkonbutton_share_file_button
// This button starts the file sharing.
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkonbutton_share_file_button
    {
    flags  = 0;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid  = EMbmVideoteluiQgn_indi_tb_gallery;
            bmpmask = EMbmVideoteluiQgn_indi_tb_gallery_mask;
            helptxt = qtn_vt_tooltip_share;
            extension = r_share_button_state_extension;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_avkonbutton_snapshot_button
// This button sets capture mode on.
//
// -----------------------------------------------------------------------------
//
/* Not in use currently
RESOURCE AVKON_BUTTON r_avkonbutton_snapshot_button
    {
    flags  = 0;
    states =
        {
        AVKON_BUTTON_STATE
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid  =  EMbmVideoteluiQgn_indi_cams_tb_capture;
            bmpmask = EMbmVideoteluiQgn_indi_cams_tb_capture_mask;
            helptxt = qtn_vt_tooltip_send_snapshot;
            //extension is also needed here
            }
        };
    }
*/


// -----------------------------------------------------------------------------
//
// r_mini_dialer_editor
// This is a resource for a hidden focused editor for minidialer (touch input).
//
// -----------------------------------------------------------------------------
//
RESOURCE SECRETED r_mini_dialer_editor
    {
    num_letters=255;
    }

//----------------------------------------------------
//
//    video preference options
//
//----------------------------------------------------
//
RESOURCE TBUF r_videotelui_qtn_incal_normal_list_option
    {
    buf = qtn_incal_normal_list_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_details_list_option
    {
    buf = qtn_incal_details_list_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_motion_list_option
    {
    buf = qtn_incal_motion_list_option;
    }

//----------------------------------------------------
//
//    white balance options
//
//----------------------------------------------------
RESOURCE TBUF r_videotelui_qtn_incal_automatic_option
    {
    buf = qtn_incal_automatic_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_sunny_option
    {
    buf = qtn_incal_sunny_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_cloudy_option
    {
    buf = qtn_incal_cloudy_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_incandescent_option
    {
    buf = qtn_incal_incandescent_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_fluorescent_option
    {
    buf = qtn_incal_fluorescent_option;
    }

//----------------------------------------------------
//
//    colour tone options
//
//----------------------------------------------------
RESOURCE TBUF r_videotelui_qtn_incal_ct_normal_option
    {
    buf = qtn_incal_ct_normal_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_sepia_option
    {
    buf = qtn_incal_sepia_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_b_and_w_option
    {
    buf = qtn_incal_b_and_w_option;
    }

RESOURCE TBUF r_videotelui_qtn_incal_negative_option
    {
    buf = qtn_incal_negative_option;
    }

// ---------------------------------------------------------
//		r_videotelui_white_balance_setting_page
//		White balance item array for setting page
//
// ---------------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_videotelui_white_balance_setting_page
     {
     label = qtn_incal_video_white_balance_option;
     softkey_resource =  R_AVKON_SOFTKEYS_OK_CANCEL;
     type = EAknSetListBox;
     editor_resource_id = r_videotelui_transparent_setting_listbox;
     }

// ---------------------------------------------------------
//		r_videotelui_color_tone_setting_page
//		White balance item array for setting page
//
// ---------------------------------------------------------
//
RESOURCE AVKON_SETTING_PAGE r_videotelui_color_tone_setting_page
     {
     label = qtn_incal_video_colour_tone_option;
     softkey_resource =  R_AVKON_SOFTKEYS_OK_CANCEL;
     type = EAknSetListBox;
     editor_resource_id = r_videotelui_transparent_setting_listbox;
     }

//----------------------------------------------------
//
//    r_videotelui_transparent_setting_listbox
//    Listbox for transparent setting page
//
//----------------------------------------------------
//
RESOURCE LISTBOX r_videotelui_transparent_setting_listbox
     {
     flags = 0x0001;
     }

// ---------------------------------------------------------
//		r_videotelui_video_quality_array
//		Item array for the selection list dialog
//
// ---------------------------------------------------------
//
RESOURCE ARRAY r_videotelui_video_quality_array
	{
	items =
		{
		LBUF
			{
			txt = qtn_incal_normal_list_option;
			},
		LBUF
			{
			txt = qtn_incal_details_list_option;
			},
		LBUF
			{
			txt = qtn_incal_motion_list_option;
			}
		};
	}

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_select_cancel
// Videoquality softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_select_cancel
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyEmpty;
            txt= text_softkey_empty;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyCancel;
            txt = text_softkey_cancel;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeySelect;
            txt= text_softkey_select;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_empty_dialerexit
// Dialer softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_empty_dialerexit
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EVtUiCmdDialerEmergencyCall;
            txt = qtn_incal_softk_emergency_call;
            },
        CBA_BUTTON
            {
            id = EVtUiDialerExit;
            txt = text_softkey_back;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyEmpty;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
//r_videotelui_softkeys_empty_active_command
// Dialer softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_empty_active_command
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyEmpty;
            txt = text_softkey_empty;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyEmpty;
            txt = text_softkey_empty;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyEmpty;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_avkonbutton_audio_routing_button
// This button changes audio routing.
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_avkonbutton_audio_routing_button
    {
    flags  = 0;
    states =
        {
        AVKON_BUTTON_STATE // Deactivate loudspeaker (0)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_handset;
            bmpmask = EMbmVideoteluiQgn_indi_tb_handset_mask;
            helptxt = qtn_vt_tooltip_audio_handset;
            extension =  r_handset_button_state_extension;
            },
        AVKON_BUTTON_STATE // Deactivate loudspeaker (dummy state) (1)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_handset;
            bmpmask = EMbmVideoteluiQgn_indi_tb_handset_mask;
            extension = r_handset_button_state_extension;
            },
        AVKON_BUTTON_STATE // Deactivate bthf == Activate loudspkr (2)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_ihf_on;
            bmpmask = EMbmVideoteluiQgn_indi_tb_ihf_on_mask;
            helptxt = qtn_vt_tooltip_audio_loudspeaker;
            extension = r_ihf_on_button_state_extension;
            },
        AVKON_BUTTON_STATE // Deactivate bthf (dummy state) (3)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_ihf_on;
            bmpmask = EMbmVideoteluiQgn_indi_tb_ihf_on_mask;
            extension = r_ihf_on_button_state_extension;
            },
         AVKON_BUTTON_STATE // Activate loudspeaker (4)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid  = EMbmVideoteluiQgn_indi_tb_ihf_on;
            bmpmask = EMbmVideoteluiQgn_indi_tb_ihf_on_mask;
            helptxt = qtn_vt_tooltip_audio_loudspeaker;
            extension = r_ihf_on_button_state_extension;
            },
        AVKON_BUTTON_STATE // Activate loudspeaker (dummy state) (5)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_ihf_on;
            bmpmask = EMbmVideoteluiQgn_indi_tb_ihf_on_mask;
            extension = r_ihf_on_button_state_extension;
            },
         AVKON_BUTTON_STATE // Activate bt hf (6)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid  = EMbmVideoteluiQgn_indi_tb_bthf;
            bmpmask = EMbmVideoteluiQgn_indi_tb_bthf_mask;
            helptxt = qtn_vt_tooltip_audio_bthf;
            extension = r_bt_hf_button_state_extension;
            },
        AVKON_BUTTON_STATE // Activate bt hf (dummy state) (7)
            {
            bmpfile = "Z:"APP_BITMAP_DIR"\\videotelui.mif";
            bmpid = EMbmVideoteluiQgn_indi_tb_bthf;
            bmpmask = EMbmVideoteluiQgn_indi_tb_bthf_mask;
            extension = r_bt_hf_button_state_extension;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_softkeys_dialer
// Options & Dialer open softkeys
//
// -----------------------------------------------------------------------------
//
RESOURCE CBA r_videotelui_softkeys_dialer
    {
    buttons =
        {
        CBA_BUTTON
            {
            id = EAknSoftkeyOptions;
            txt = text_softkey_option;
            },
        CBA_BUTTON
            {
            id = EVtUiCmdSendDTMF;
            txt = qtn_incal_softk_dialer;
            },
        CBA_BUTTON
            {
            id = EAknSoftkeyContextOptions;
            txt = text_softkey_empty;
            }
        };
    }

// -----------------------------------------------------------------------------
//
// r_videotelui_end_call_button
// End call button
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_BUTTON r_videotelui_end_call_button
        {
        flags = 0;
        states =
            {
            AVKON_BUTTON_STATE
                {
                flags = 0;
                txt = qtn_vt_button_end_call;
                }
            };                
        }
// End of File
